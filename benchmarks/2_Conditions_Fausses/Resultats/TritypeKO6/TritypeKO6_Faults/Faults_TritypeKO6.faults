DOING LOCALIZATION...
NLS missing message: initializer_error in: org.eclipse.core.internal.runtime.messages
NLS missing message: fileInitializer_fileNotFound in: org.eclipse.core.internal.runtime.messages
NLS missing message: fileInitializer_IOError in: org.eclipse.core.internal.runtime.messages
NLS missing message: fileInitializer_missingFileName in: org.eclipse.core.internal.runtime.messages

Starting conversion of file: /home/mdbekkouche/These/Benchmarks_MCS-IIS/Programs_Benchmarks_MCS-IIS/2_Conditions_Fausses/TritypeKO6.java
Loops are unwound 10 times.
	CPLEX 12.3.0.0

From the counterexample, LocFaults calculates MCS by exploring the graph in DFS from top to bottom and by deviating at most 'k' conditional statements.
/***************************************************************/
By deviating '1' condition(s), we obtain:
1. CSP_d:
line 26 : ( caller_0_i_0 == caller_0_j_0 )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 3 --> line -1
caller_0_k_0 := 3 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
( caller_0_i_0 == caller_0_j_0 ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{caller_0_j_0 := 3}
{POST}
{caller_0_i_0 := 2}

Runtime of the method that compute MCS: 0.038
/***************************************************************/
By deviating '1' condition(s), we obtain:
1. CSP_d:
line 29 : ( caller_0_i_0 == caller_0_k_0 )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 3 --> line -1
caller_0_k_0 := 3 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := caller_0_trityp_1 --> line 0
( caller_0_i_0 == caller_0_k_0 ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{caller_0_k_0 := 3}
{POST}
{caller_0_i_0 := 2}

Runtime of the method that compute MCS: 0.032
/***************************************************************/
By deviating '2' condition(s), we obtain:
1. CSP_d:
line 35 : ( caller_0_trityp_4 == 0 )
line 49 : ( ( caller_0_trityp_4 == 1 ) && ( ( caller_0_i_0 + caller_0_j_0 ) > caller_0_k_0 ) )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 3 --> line -1
caller_0_k_0 := 3 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := caller_0_trityp_1 --> line 0
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
!( ( caller_0_trityp_4 == 0 ) ) --> line -2
( ( caller_0_trityp_4 == 1 ) && ( ( caller_0_i_0 + caller_0_j_0 ) > caller_0_k_0 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{line 25}
{line 0}
{line 0}
{line 0}
{POST,POST}

Runtime of the method that compute MCS: 0.046
/***************************************************************/
By deviating '2' condition(s), we obtain:
1. CSP_d:
line 35 : ( caller_0_trityp_4 == 0 )
line 53 : ( ( caller_0_trityp_4 == 2 ) && ( ( caller_0_i_0 + caller_0_k_0 ) > caller_0_j_0 ) )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 3 --> line -1
caller_0_k_0 := 3 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := caller_0_trityp_1 --> line 0
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
!( ( caller_0_trityp_4 == 0 ) ) --> line -2
( ( caller_0_trityp_4 == 2 ) && ( ( caller_0_i_0 + caller_0_k_0 ) > caller_0_j_0 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{line 25}
{line 0}
{line 0}
{line 0}
{POST,POST}

Runtime of the method that compute MCS: 0.063
/***************************************************************/
By deviating '2' condition(s), we obtain:
1. CSP_d:
line 35 : ( caller_0_trityp_4 == 0 )
line 57 : ( ( caller_0_trityp_4 == 3 ) && ( ( caller_0_j_0 + caller_0_k_0 ) > caller_0_i_0 ) )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 3 --> line -1
caller_0_k_0 := 3 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := caller_0_trityp_1 --> line 0
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
!( ( caller_0_trityp_4 == 0 ) ) --> line -2
( ( caller_0_trityp_4 == 3 ) && ( ( caller_0_j_0 + caller_0_k_0 ) > caller_0_i_0 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{line 25}
{line 0}
{line 0}
{line 0}
{POST,POST}

Runtime of the method that compute MCS: 0.064
/***************************************************************/
By deviating '0' condition(s), we obtain:
1. CSP_d: empty set
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 3 --> line -1
caller_0_k_0 := 3 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := caller_0_trityp_1 --> line 0
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
caller_0_trityp_5 := 1 --> line 40
caller_0_Result_0 := caller_0_trityp_5 --> line 68
( ( caller_0_trityp_5 == 2 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{POST}
{line 40}

Runtime of the method that compute MCS: 0.01

The final resulats:
1. The pretreatment(CFG building) time: 0.51
2. Elapsed time during DFS exploration and MCS calculation: 0.283
3. The sum of computation time of MCS isolations only: 0.253
3. MCS found:
Assignments
{line 25}
{line 40}
Conditions
{line 26}
{line 29}
{line 35,line 49}
{line 35,line 53}
{line 35,line 57}

Total elapsed time: 0.887 s.
