DOING LOCALIZATION...
NLS missing message: initializer_error in: org.eclipse.core.internal.runtime.messages
NLS missing message: fileInitializer_fileNotFound in: org.eclipse.core.internal.runtime.messages
NLS missing message: fileInitializer_IOError in: org.eclipse.core.internal.runtime.messages
NLS missing message: fileInitializer_missingFileName in: org.eclipse.core.internal.runtime.messages

Starting conversion of file: /home/mdbekkouche/These/Benchmarks_MCS-IIS/Programs_Benchmarks_MCS-IIS/1_Conditions_Fausses/TritypeKO2.java
Loops are unwound 10 times.

From the counterexample, LocFaults calculates MCS by exploring the graph in DFS from top to bottom and by deviating at most '1' conditional statements.
Solver: CP OPTIMIZER
By deviating '0' condition(s), we obtain:

1. CSP_d: empty set
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 2 --> line -1
caller_0_k_0 := 4 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := ( caller_0_trityp_1 + 1 ) --> line 27
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
caller_0_trityp_5 := 2 --> line 54
caller_0_Result_0 := caller_0_trityp_5 --> line 68
( ( caller_0_trityp_5 == 4 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{line 54}

Runtime of the method that compute MCS: 0.023

The resulats:
1. Elapsed time during DFS exploration and MCS calculation: 0.043
2. The sum of computation time of MCS isolations only: 0.023

Suspicious instructions:
The number of suspicious instructions:0

By deviating '1' condition(s), we obtain:

1. CSP_d:
line 21(Else) : ( ( ( caller_0_i_0 == 0 ) || ( caller_0_j_0 == 0 ) ) || ( caller_0_k_0 == 0 ) )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 2 --> line -1
caller_0_k_0 := 4 --> line -1
caller_0_trityp_0 := 0 --> line 20
( ( ( caller_0_i_0 == 0 ) || ( caller_0_j_0 == 0 ) ) || ( caller_0_k_0 == 0 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:

Runtime of the method that compute MCS: 0.0
1. CSP_d:
line 26(If) : ( caller_0_i_0 == caller_0_j_0 )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 2 --> line -1
caller_0_k_0 := 4 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
!( ( caller_0_i_0 == caller_0_j_0 ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:

Runtime of the method that compute MCS: 0.001
1. CSP_d:
line 35(Else) : ( caller_0_trityp_4 == 0 )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 2 --> line -1
caller_0_k_0 := 4 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := ( caller_0_trityp_1 + 1 ) --> line 27
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
( caller_0_trityp_4 == 0 ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
{line 0}
{line 27}
{line 0}
{line 25}

Runtime of the method that compute MCS: 0.046
1. CSP_d:
line 53(If) : ( ( caller_0_trityp_4 == 1 ) && ( ( caller_0_i_0 + caller_0_k_0 ) > caller_0_j_0 ) )
------------------------
2. CSP_a:
caller_0_i_0 := 2 --> line -1
caller_0_j_0 := 2 --> line -1
caller_0_k_0 := 4 --> line -1
caller_0_trityp_0 := 0 --> line 20
caller_0_trityp_1 := 0 --> line 25
caller_0_trityp_2 := ( caller_0_trityp_1 + 1 ) --> line 27
caller_0_trityp_3 := caller_0_trityp_2 --> line 0
caller_0_trityp_4 := caller_0_trityp_3 --> line 0
!( ( ( caller_0_trityp_4 == 1 ) && ( ( caller_0_i_0 + caller_0_k_0 ) > caller_0_j_0 ) ) ) --> line -2

The system is infeasible
------------------------
3. MCS in CSP_a:
